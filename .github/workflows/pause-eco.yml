name: Mise en pause Scalingo

on:
  schedule:
    # Du lundi au vendredi à 6h UTC => démarrage des containers
    - cron: '0 6 * * 1-5'
    # Du lundi au vendredi à 20h UTC => mise en pause des containers
    - cron: '0 20 * * 1-5'
  workflow_dispatch:
    inputs:
      number_of_container:
        description: 'Nombre de containers souhaités'
        required: false
        type: number

env:
  APP_NAME: 1j1s-front-lighthouse-report
  STATUSCAKE_API_TOKEN: ${{ secrets.STATUSCAKE_API_TOKEN }}
  STATUSCAKE_UPTIME_CHECK_ID: 6898859
  CONTAINER_NUMBER: ${{ github.event.inputs.number_of_container || '1' }}

jobs:
  pause-recette:
    runs-on: ubuntu-latest

    steps:
      - name: Configurer la CLI Scalingo
        uses: scalingo-community/setup-scalingo@v0.1.1
        with:
          api_token: ${{ secrets.SCALINGO_API_TOKEN }}
          region: ${{ vars.SCALINGO_REGION }}
          app_name: ${{ env.APP_NAME }}

      - name: Définir le nombre cible de containers à 0
        # when schedule on evening
        if: github.event.schedule == '0 20 * * 1-5'
        run: echo "CONTAINER_NUMBER=0" >> $GITHUB_ENV

      - name: Mettre en pause la sonde StatusCake
        # when schedule on evening
        if: github.event.schedule == '0 20 * * 1-5'
        run: |
          curl -X PUT https://api.statuscake.com/v1/uptime/${STATUSCAKE_UPTIME_CHECK_ID} \
            -H "Authorization: Bearer ${STATUSCAKE_API_TOKEN}" \
            -d "paused=true"

      - name: Mettre en pause ou redémarrer les containers de l'application
        uses: nick-fields/retry@v3
        with:
          max_attempts: 10
          retry_on: error
          timeout_seconds: 30
          retry_wait_seconds: 30
          command: |
            scalingo scale web:${CONTAINER_NUMBER}

      - name: Mettre en pause ou redémarrer les review apps associées à l'application
        run: |
          for review_app in $(scalingo review-apps | grep -v "No review app" | grep "$APP_NAME" | awk -F' | ' '{print $2}'); do

            echo "Mise en pause de la review app ${review_app}"
            if !SCALE_RESULT=$(scalingo --app "${review_app}" scale --synchronous web:${CONTAINER_NUMBER} 2>&1); then

              if [[ $SCALE_RESULT == *"no change in containers formation"* ]]; then
                echo "La review app ${review_app} est déjà mise en pause"
              else
                echo $SCALE_RESULT
                exit 1
              fi
            fi
          done

      - name: Attendre que l'application soit démarrée
        if: github.event.schedule == '0 6 * * 1-5' || github.event_name == 'workflow_dispatch'
        run: |
          while [[ $(scalingo ps | grep web | grep -c running) -eq 0 ]]; do
            echo "En attente du démarrage des containers..."
            sleep 5
          done
          echo "Au moins un container est démarré. On peut continuer."
          sleep 2
        shell: bash

      - name: Relancer la sonde StatusCake
        # when schedule on morning or manually trigerred
        if: github.event.schedule == '0 6 * * 1-5' || github.event_name == 'workflow_dispatch'
        run: |
          curl -X PUT https://api.statuscake.com/v1/uptime/${STATUSCAKE_UPTIME_CHECK_ID} \
            -H "Authorization: Bearer ${STATUSCAKE_API_TOKEN}" \
            -d "paused=false"
